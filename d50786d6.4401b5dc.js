(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{117:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(3),o=n(7),r=(n(0),n(127)),l=(n(132),n(133),{id:"lecture10",title:"Lecture 10"}),i={unversionedId:"lecture10",id:"version-2020fa/lecture10",isDocsHomePage:!1,title:"Lecture 10",description:"Final Project due December 15 at 359pm ET slip days permitting)",source:"@site/versioned_docs/version-2020fa/lecture10.md",slug:"/lecture10",permalink:"/docs/2020fa/lecture10",version:"2020fa",sidebar:"version-2020fa/docs",previous:{title:"Lecture 9",permalink:"/docs/2020fa/lecture9"},next:{title:"Assignments",permalink:"/docs/2020fa/assignments"}},c=[{value:"How to prettify your app!",id:"how-to-prettify-your-app",children:[{value:"MaterialUI",id:"materialui",children:[]},{value:"Other Resources for Styling",id:"other-resources-for-styling",children:[]}]},{value:"React Native",id:"react-native",children:[{value:"What is React Native?",id:"what-is-react-native",children:[]},{value:"Core React Native Components",id:"core-react-native-components",children:[]},{value:"How to start a React Native Project?",id:"how-to-start-a-react-native-project",children:[]},{value:"Demo",id:"demo",children:[]},{value:"Learn more",id:"learn-more",children:[]}]}],s={toc:c};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Final Project due December 15 at 3:59pm")," (late deadline December 18 3:59pm ET slip days permitting)"),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://drive.google.com/file/d/1h5dfr9K-YTAb4iQtIKO9NiAabGcqI0p4/view?usp=sharing"}),"Lecture Video")),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.google.com/presentation/d/17J8pTSoy3DoBVNdXBWcbc3opYMBsrg5t5k7V9CMBssc/edit?usp=sharing"}),"Lecture Slides")),Object(r.b)("h2",{id:"how-to-prettify-your-app"},"How to prettify your app!"),Object(r.b)("p",null,"There are a lot of different options for styling your app. You can write the CSS stylesheets yourself and import them into your React application or you can use a framework! Frameworks like MaterialUI, Bootstrap, SemanticUI have developed \u2728 styled \u2728 React Components for you to use easily! It's as easy as importing and using!"),Object(r.b)("p",null,"In this lecture we went through how to add one framework, ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://material-ui.com/"}),Object(r.b)("strong",{parentName:"a"},"MaterialUI")),", to our ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"./lecture7#filterable-product-table-example"}),"Thinking in React example")," from lecture 7."),Object(r.b)("h3",{id:"materialui"},"MaterialUI"),Object(r.b)("p",null,"MaterialUI is a framework developed from Google for applying some default (Google-like) styling to your React components!"),Object(r.b)("h4",{id:"getting-started"},"Getting Started"),Object(r.b)("p",null,"When using MaterialUI or really any framework, package, or external tool, you should first look at the documentation. The documentation usually gives you tips on how to install and use the package."),Object(r.b)("p",null,"For MaterialUI, we see that we first need to install it since it's an external package. Run"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"yarn add @material-ui/core\n")),Object(r.b)("p",null,"Next, we also want to use the classic Roboto font and the documentation says we need to add this line"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<link\n  rel="stylesheet"\n  href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"\n/>\n')),Object(r.b)("p",null,"to our ",Object(r.b)("inlineCode",{parentName:"p"},"public/index.html"),"."),Object(r.b)("h4",{id:"inputs"},"Inputs"),Object(r.b)("p",null,"Let's first convert our input fields (the search bar and the checkbox) into MaterialUI. We can navigate to the components page of MaterialUI by clicking the hamburger icon (three lines) on the top left of the page and scrolling down to ",Object(r.b)("inlineCode",{parentName:"p"},"Components"),"."),Object(r.b)("p",null,"We see that there is a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://material-ui.com/components/text-fields/"}),Object(r.b)("inlineCode",{parentName:"a"},"TextField"))," component. On that page we can see several variations of ",Object(r.b)("inlineCode",{parentName:"p"},"TextField")," and the code associated with it. There is also a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://material-ui.com/components/checkboxes/"}),Object(r.b)("inlineCode",{parentName:"a"},"Checkbox"))," component that can replace our original checkbox."),Object(r.b)("p",null,"Adding these to the ",Object(r.b)("inlineCode",{parentName:"p"},"SearchBar")," component in ",Object(r.b)("inlineCode",{parentName:"p"},"FilterableProductTable.tsx"),", the final file looks like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx",metastring:'title="FilterableProductTable.tsx"',title:'"FilterableProductTable.tsx"'}),"import React, { ChangeEvent, useState } from 'react';\nimport ProductTable, { Product } from './Starter';\nimport { TextField, Checkbox } from '@material-ui/core/';\n\ntype TableProps = {\n  readonly products: Product[];\n};\n\ntype SearchProps = {\n  readonly filterText: string;\n  readonly inStockOnly: boolean;\n  readonly handleFilterTextChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  readonly handleCheckBoxChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst SearchBar = ({\n  filterText,\n  inStockOnly,\n  handleFilterTextChange,\n  handleCheckBoxChange,\n}: SearchProps) => (\n  <form>\n    <TextField\n      label=\"Search\"\n      variant=\"outlined\"\n      placeholder=\"Search for a product!\"\n      value={filterText}\n      onChange={handleFilterTextChange}\n    />\n    <p>\n      <Checkbox\n        inputProps={{ 'aria-label': 'uncontrolled-checkbox' }}\n        value={inStockOnly}\n        onChange={handleCheckBoxChange}\n      />{' '}\n      Only show products in stock\n    </p>\n  </form>\n);\n\nconst FilterableProductTable = ({ products }: TableProps) => {\n  const [filterText, setFilterText] = useState('');\n  const [inStockOnly, setInStockOnly] = useState(false);\n\n  const handleFilterTextChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setFilterText(e.target.value);\n  const handleCheckBoxChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setInStockOnly(e.target.checked);\n\n  return (\n    <div>\n      <SearchBar\n        filterText={filterText}\n        inStockOnly={inStockOnly}\n        handleFilterTextChange={handleFilterTextChange}\n        handleCheckBoxChange={handleCheckBoxChange}\n      />\n      <ProductTable\n        products={products}\n        filterText={filterText}\n        inStockOnly={inStockOnly}\n      />\n    </div>\n  );\n};\n\nexport default FilterableProductTable;\n")),Object(r.b)("p",null,"Notice that we imported each component from ",Object(r.b)("inlineCode",{parentName:"p"},"@material-ui/core")," before using it."),Object(r.b)("h4",{id:"startertsx"},"Starter.tsx"),Object(r.b)("p",null,"We apply the same methodology to converting the product table to MaterialUI. MaterialUI has several ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://material-ui.com/components/tables/"}),"Table components")," that can replace the traditional HTML table elements we use in ",Object(r.b)("inlineCode",{parentName:"p"},"Starter.tsx"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx",metastring:'title="Starter.tsx"',title:'"Starter.tsx"'}),"import React, { ReactElement } from 'react';\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  createStyles,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core';\n\nexport type Product = {\n  readonly category: string;\n  readonly price: string;\n  readonly stocked: boolean;\n  readonly name: string;\n};\n\nconst ProductRow = (product: Product) => {\n  const name = product.stocked ? (\n    product.name\n  ) : (\n    <span style={{ color: 'red' }}>{product.name}</span>\n  );\n  return (\n    <TableRow>\n      <TableCell>{name}</TableCell>\n      <TableCell>{product.price}</TableCell>\n    </TableRow>\n  );\n};\n\ninterface RowProps extends WithStyles<typeof styles> {\n  readonly category: string;\n}\n\nconst styles = createStyles({\n  ProductCategoryRow: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n});\n\nconst _ProductCategoryRow = ({ category, classes }: RowProps) => (\n  <TableRow>\n    <TableCell colSpan={2} className={classes.ProductCategoryRow}>\n      {category}\n    </TableCell>\n  </TableRow>\n);\n\nconst ProductCategoryRow = withStyles(styles)(_ProductCategoryRow);\n\ntype Props = {\n  readonly products: Product[];\n  readonly filterText: string;\n  readonly inStockOnly: boolean;\n};\n\nconst ProductTable = ({ products, filterText, inStockOnly }: Props) => {\n  const rows: ReactElement[] = [];\n  let lastCategory: string | null = null;\n\n  products.forEach((product) => {\n    if (product.name.indexOf(filterText) === -1) {\n      return;\n    }\n    if (inStockOnly && !product.stocked) {\n      return;\n    }\n    if (product.category !== lastCategory) {\n      rows.push(\n        <ProductCategoryRow\n          category={product.category}\n          key={product.category}\n        />\n      );\n    }\n    rows.push(<ProductRow key={product.name} {...product} />);\n    lastCategory = product.category;\n  });\n\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Name</TableCell>\n          <TableCell>Price</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>{rows}</TableBody>\n    </Table>\n  );\n};\n\nexport default ProductTable;\n")),Object(r.b)("p",null,"Notice we also used MaterialUI's higher order component ",Object(r.b)("inlineCode",{parentName:"p"},"withStyles")," to inject our own styles into ",Object(r.b)("inlineCode",{parentName:"p"},"ProductCategoryRow"),". Customizing our own styles is a little bit tricky with a framework since the framework styles generally override our styles. MaterialUI recommends ",Object(r.b)("inlineCode",{parentName:"p"},"withStyles")," for custom styles ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://material-ui.com/customization/components/"}),"here"),". It also has some guides on ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://material-ui.com/guides/typescript/"}),"using ",Object(r.b)("inlineCode",{parentName:"a"},"withStyles")," with TypeScript")," since ",Object(r.b)("inlineCode",{parentName:"p"},"withStyles")," passes the styles down as a prop ",Object(r.b)("inlineCode",{parentName:"p"},"classes")," so we need to add that to our ",Object(r.b)("inlineCode",{parentName:"p"},"RowType"),"."),Object(r.b)("h3",{id:"other-resources-for-styling"},"Other Resources for Styling"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://styled-components.com/"}),"Styled Components \ud83d\udc85")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://react-bootstrap.github.io/"}),"React Bootstrap")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://react.semantic-ui.com/"}),"Semantic UI")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://sass-lang.com/"}),"SCSS")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://stylelint.io/"}),"stylelint"))),Object(r.b)("h2",{id:"react-native"},"React Native"),Object(r.b)("h3",{id:"what-is-react-native"},"What is React Native?"),Object(r.b)("p",null,"React Native allows for cross platform mobile development using a webdev framework we already know--React!"),Object(r.b)("p",null,"React Native allows you to build UIs independent of the platform. Usually when developing an app you have to develop an Android version (using Java/Kotlin) and iOS version (using Objective-C/Swift) separately. React Native takes care of this conversion for you."),Object(r.b)("h3",{id:"core-react-native-components"},"Core React Native Components"),Object(r.b)("p",null,"Since React Native is really just React, many of the same concepts (",Object(r.b)("inlineCode",{parentName:"p"},"useState"),", ",Object(r.b)("inlineCode",{parentName:"p"},"props"),", React Hooks, etc) still apply to React. However, instead of HTML we have ",Object(r.b)("inlineCode",{parentName:"p"},"Views"),". A view is the basic building block of UI in mobile development. Views can display images, hold text, handle user input, etc."),Object(r.b)("p",null,"Some core React Native components are:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"<View>"),": A container that supports layout with flexbox, style, some touch handling, and accessibility controls. Similar to a non-scrolling ",Object(r.b)("inlineCode",{parentName:"li"},"<div>"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"<Text>"),": Displays, styles, and nests strings of text and even handles touch events. Similar to a ",Object(r.b)("inlineCode",{parentName:"li"},"<p>")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"<Image>"),": Displays images like ",Object(r.b)("inlineCode",{parentName:"li"},"<img>")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"<ScrollView>"),": A generic scrolling container than can hold nested components and views. Similar to a ",Object(r.b)("inlineCode",{parentName:"li"},"<div>"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"<TextInput>"),": User text input field similar to ",Object(r.b)("inlineCode",{parentName:"li"},'<input type="text" />'),"."),Object(r.b)("li",{parentName:"ul"},"... and you can also define your own custom components (and use those built by the community)!")),Object(r.b)("h3",{id:"how-to-start-a-react-native-project"},"How to start a React Native Project?"),Object(r.b)("p",null,"React Native uses ",Object(r.b)("inlineCode",{parentName:"p"},"Expo")," framework to develop, build, and iterate on iOS, Android and webapps. Expo provides a UI for you to view your changes and if you download the Expo app (",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://play.google.com/store/apps/details?id=host.exp.exponent&hl=en_US"}),"Android"),", ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://apps.apple.com/us/app/expo-client/id982107779"}),"iOS"),") you can see those changes on your phone as well! After all, we're doing mobile development."),Object(r.b)("p",null,"To start a React Native project run the following:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"yarn add expo-cli\nyarn expo init <project name>\nyarn start\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"yarn expo init")," is similar to ",Object(r.b)("inlineCode",{parentName:"p"},"create-react-app")," in that it generates boilerplate code for you."),Object(r.b)("h3",{id:"demo"},"Demo"),Object(r.b)("p",null,"As part of the demo we built the simple TODO list app from assignment 4 in React Native! The code is here:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'}),"import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, Button } from 'react-native';\n\nexport default function App(): React.ReactElement {\n  const [item, setItem] = useState<string>('');\n  const [items, setItems] = useState<string[]>([]);\n\n  const updateItems = (): void => {\n    setItems([...items, item]);\n    setItem('');\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        placeholder=\"Add an item\"\n        style={styles.input}\n        value={item}\n        onChangeText={(text) => setItem(text)}\n      />\n      <Button title=\"Add item\" onPress={() => updateItems()} />\n      {items.map((i, index) => (\n        <Text key={index}> {i} </Text>\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  input: {\n    borderWidth: 1,\n    width: 150,\n  },\n});\n")),Object(r.b)("p",null,"Once you ",Object(r.b)("inlineCode",{parentName:"p"},"yarn start"),", you should be taken to Expo where you can view your changes on your browser. On the bottom left, there should also be a QR code. If you download the Expo app and scan the QR code with your phone camera (",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://play.google.com/store/apps/details?id=host.exp.exponent&hl=en_US"}),"Android"),", ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://apps.apple.com/us/app/expo-client/id982107779"}),"iOS"),"), it should take you to the Expo app where you can see your application in mobile form!"),Object(r.b)("h3",{id:"learn-more"},"Learn more"),Object(r.b)("p",null,"This was a very cursory introduction to React Native. You can learn more by referring to React docs."),Object(r.b)("p",null,"React Docs: ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://reactnative.dev/docs/getting-started"}),"https://reactnative.dev/docs/getting-started")),Object(r.b)("p",null,"Expo Docs: ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.expo.io/"}),"https://docs.expo.io/")))}p.isMDXComponent=!0},127:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},b=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=p(n),d=a,m=b["".concat(l,".").concat(d)]||b[d]||u[d]||r;return n?o.a.createElement(m,i(i({ref:t},s),{},{components:n})):o.a.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<r;s++)l[s]=n[s];return o.a.createElement.apply(null,l)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},128:function(e,t,n){"use strict";function a(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(o&&(o+=" "),o+=n);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}t.a=function(){for(var e,t,n=0,o="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(o&&(o+=" "),o+=t);return o}},130:function(e,t,n){"use strict";var a=n(0),o=n(131);t.a=function(){var e=Object(a.useContext)(o.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},131:function(e,t,n){"use strict";var a=n(0),o=Object(a.createContext)(void 0);t.a=o},132:function(e,t,n){"use strict";var a=n(0),o=n.n(a),r=n(130),l=n(128),i=n(55),c=n.n(i),s=37,p=39;t.a=function(e){var t=e.lazy,n=e.block,i=e.defaultValue,b=e.values,u=e.groupId,d=e.className,m=Object(r.a)(),h=m.tabGroupChoices,f=m.setTabGroupChoices,y=Object(a.useState)(i),O=y[0],j=y[1],g=a.Children.toArray(e.children);if(null!=u){var v=h[u];null!=v&&v!==O&&b.some((function(e){return e.value===v}))&&j(v)}var w=function(e){j(e),null!=u&&f(u,e)},x=[];return o.a.createElement("div",null,o.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(l.a)("tabs",{"tabs--block":n},d)},b.map((function(e){var t=e.value,n=e.label;return o.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":O===t,className:Object(l.a)("tabs__item",c.a.tabItem,{"tabs__item--active":O===t}),key:t,ref:function(e){return x.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case p:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(x,e.target,e)},onFocus:function(){return w(t)},onClick:function(){w(t)}},n)}))),t?Object(a.cloneElement)(g.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):o.a.createElement("div",{className:"margin-vert--md"},g.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}},133:function(e,t,n){"use strict";var a=n(3),o=n(0),r=n.n(o);t.a=function(e){var t=e.children,n=e.hidden,o=e.className;return r.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:o}),t)}}}]);