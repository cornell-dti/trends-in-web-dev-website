(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{144:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),s=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=a,m=u["".concat(i,".").concat(d)]||u[d]||b[d]||r;return n?o.a.createElement(m,c(c({ref:t},p),{},{components:n})):o.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<r;p++)i[p]=n[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},94:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(3),o=n(7),r=(n(0),n(144)),i={id:"lecture10",title:"Lecture 10"},c={unversionedId:"lecture10",id:"version-2021sp/lecture10",isDocsHomePage:!1,title:"Lecture 10",description:"Lecture Slides",source:"@site/versioned_docs/version-2021sp/lecture10.md",slug:"/lecture10",permalink:"/docs/2021sp/lecture10",version:"2021sp",sidebar:"docs",previous:{title:"Lecture 9",permalink:"/docs/2021sp/lecture9"},next:{title:"Assignments",permalink:"/docs/2021sp/assignments"}},l=[{value:"React Native",id:"react-native",children:[{value:"What is React Native?",id:"what-is-react-native",children:[]},{value:"Core React Native Components",id:"core-react-native-components",children:[]},{value:"How to start a React Native Project?",id:"how-to-start-a-react-native-project",children:[]},{value:"Demo",id:"demo",children:[]},{value:"Learn more",id:"learn-more",children:[]}]}],p={toc:l};function s(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.google.com/presentation/d/1_DbVZInabluIm2QDOkgWZG0SwecCYTcyOInm_PIQELE/edit?usp=sharing"}),"Lecture Slides")),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://drive.google.com/file/d/1d2mCrRM_mavlNhCJk0kf-6ZoTS9VvVGP/view?usp=sharing"}),"Lecture Video")),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/2021sp/finalproject#milestone-2"}),"Final Project - Milestone 2 due 5/6 3:59 PM")),Object(r.b)("h2",{id:"react-native"},"React Native"),Object(r.b)("h3",{id:"what-is-react-native"},"What is React Native?"),Object(r.b)("p",null,"React Native allows for cross platform mobile development using a webdev framework we already know--React!"),Object(r.b)("p",null,"React Native allows you to build UIs independent of the platform. Usually when developing an app you have to develop an Android version (using Java/Kotlin) and iOS version (using Objective-C/Swift) separately. React Native takes care of this conversion for you."),Object(r.b)("h3",{id:"core-react-native-components"},"Core React Native Components"),Object(r.b)("p",null,"Since React Native is really just React, many of the same concepts (",Object(r.b)("inlineCode",{parentName:"p"},"useState"),", ",Object(r.b)("inlineCode",{parentName:"p"},"props"),", React Hooks, etc) still apply to React. However, instead of HTML we have ",Object(r.b)("inlineCode",{parentName:"p"},"Views"),". A view is the basic building block of UI in mobile development. Views can display images, hold text, handle user input, etc."),Object(r.b)("p",null,"Some core React Native components are:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"<View>"),": A container that supports layout with flexbox, style, some touch handling, and accessibility controls. Similar to a non-scrolling ",Object(r.b)("inlineCode",{parentName:"li"},"<div>"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"<Text>"),": Displays, styles, and nests strings of text and even handles touch events. Similar to a ",Object(r.b)("inlineCode",{parentName:"li"},"<p>")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"<Image>"),": Displays images like ",Object(r.b)("inlineCode",{parentName:"li"},"<img>")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"<ScrollView>"),": A generic scrolling container than can hold nested components and views. Similar to a ",Object(r.b)("inlineCode",{parentName:"li"},"<div>"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"<TextInput>"),": User text input field similar to ",Object(r.b)("inlineCode",{parentName:"li"},'<input type="text" />'),"."),Object(r.b)("li",{parentName:"ul"},"... and you can also define your own custom components (and use those built by the community)!")),Object(r.b)("h3",{id:"how-to-start-a-react-native-project"},"How to start a React Native Project?"),Object(r.b)("p",null,"A popular way to use React Native is through the ",Object(r.b)("inlineCode",{parentName:"p"},"Expo")," framework, which allows developing, building, and iterating on iOS, Android and webapps. Expo provides a UI for you to view your changes and if you download the Expo app (",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://play.google.com/store/apps/details?id=host.exp.exponent&hl=en_US"}),"Android"),", ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://apps.apple.com/us/app/expo-client/id982107779"}),"iOS"),") you can see those changes on your phone as well! After all, we're doing mobile development."),Object(r.b)("p",null,"To start a React Native project run the following:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"yarn global add expo-cli\nexpo init <project name>\nyarn start\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"expo init")," is similar to ",Object(r.b)("inlineCode",{parentName:"p"},"create-react-app")," in that it generates boilerplate code for you."),Object(r.b)("h3",{id:"demo"},"Demo"),Object(r.b)("p",null,"As part of the demo we built the simple TODO list app from assignment 4 in React Native! The code is here:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'}),"import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, Button } from 'react-native';\n\nexport default function App(): React.ReactElement {\n  const [inputItem, setInputItem] = useState<string>('');\n  const [items, setItems] = useState<string[]>([]);\n\n  const updateItems = (): void => {\n    setItems([...items, inputItem]);\n    setInputItem('');\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.itemsView}>\n       {items.map((item, idx) => (\n         <Text key={idx}> {item} </Text>\n       ))}\n      </View>\n      <TextInput\n        placeholder=\"Add an item\"\n        style={styles.input}\n        value={inputItem}\n        onChangeText={(text) => setInputItem(text)}\n      />\n      <Button title=\"Add Item\" onPress={() => updateItems()} />\n      <StatusBar style=\"auto\">\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    borderWidth: 1,\n    width: 150,\n    marginBottom: 10,\n  },\n  itemsView: {\n    borderWidth: 1\n  }\n});\n")),Object(r.b)("p",null,"Once you ",Object(r.b)("inlineCode",{parentName:"p"},"yarn start"),", you should be taken to Expo where you can view your changes on your browser. On the bottom left, there should also be a QR code. If you download the Expo app and scan the QR code with your phone camera (",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://play.google.com/store/apps/details?id=host.exp.exponent&hl=en_US"}),"Android"),", ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://apps.apple.com/us/app/expo-client/id982107779"}),"iOS"),"), it should take you to the Expo app where you can see your application in mobile form!"),Object(r.b)("h3",{id:"learn-more"},"Learn more"),Object(r.b)("p",null,"This was a very cursory introduction to React Native. You can learn more by referring to React docs."),Object(r.b)("p",null,"React Docs: ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://reactnative.dev/docs/getting-started"}),"https://reactnative.dev/docs/getting-started")),Object(r.b)("p",null,"Expo Docs: ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.expo.io/"}),"https://docs.expo.io/")))}s.isMDXComponent=!0}}]);