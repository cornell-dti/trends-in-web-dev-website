"use strict";(self.webpackChunktrends_in_web_dev_website=self.webpackChunktrends_in_web_dev_website||[]).push([[578],{7300:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(6687);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(t),d=a,f=m["".concat(l,".").concat(d)]||m[d]||c[d]||o;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2810:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var r=t(3206),a=t(5421),o=(t(6687),t(7300)),i=["components"],s={id:"assignment3",title:"Assignment 3"},l=void 0,u={unversionedId:"assignment3",id:"version-2020fa/assignment3",isDocsHomePage:!1,title:"Assignment 3",description:"For this assignment, we will be taking a nice break from Express and Firebase to learn about some cool JavaScript fundamentals!",source:"@site/versioned_docs/version-2020fa/assignment3.md",sourceDirName:".",slug:"/assignment3",permalink:"/docs/2020fa/assignment3",tags:[],version:"2020fa",frontMatter:{id:"assignment3",title:"Assignment 3"},sidebar:"version-2020fa/docs",previous:{title:"Assignment 2",permalink:"/docs/2020fa/assignment2"},next:{title:"Assignment 4",permalink:"/docs/2020fa/assignment4"}},p=[{value:"Question 1",id:"question-1",children:[],level:2},{value:"Question 2",id:"question-2",children:[],level:2},{value:"Question 3",id:"question-3",children:[],level:2},{value:"Question 4",id:"question-4",children:[],level:2},{value:"Submission",id:"submission",children:[],level:2}],c={toc:p};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"For this assignment, we will be taking a nice break from Express and Firebase to learn about some cool JavaScript fundamentals!"),(0,o.kt)("p",null,"ALL questions in this assignment MUST be done using ",(0,o.kt)("inlineCode",{parentName:"p"},".map"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".filter"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},".reduce"),". We will give you no credit for an approach that is not functional."),(0,o.kt)("p",null,"ALL functions must also be defined using ",(0,o.kt)("strong",{parentName:"p"},"arrow functions"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"(params) => {\n  // function body\n};\n")),(0,o.kt)("p",null,"You must write your functions from the starter code. You are not allowed to change the function signature."),(0,o.kt)("h2",{id:"question-1"},"Question 1"),(0,o.kt)("p",null,"Write a function, ",(0,o.kt)("inlineCode",{parentName:"p"},"myMean"),", that takes in an array of numbers and returns the mean."),(0,o.kt)("p",null,"Starter code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export const myMean = (array: number[]): number => {\n  /* TODO: add your code */\n};\n")),(0,o.kt)("h2",{id:"question-2"},"Question 2"),(0,o.kt)("p",null,"Write a function, ",(0,o.kt)("inlineCode",{parentName:"p"},"getPrimes"),", that takes in an array of numbers and returns a new array containing only the elements that are primes.\nReminder: prime numbers are natural numbers larger than 1 that can only be divisible by itself and 1. Don't worry about efficiency! It's ok to brute force this :)"),(0,o.kt)("p",null,"Example: ",(0,o.kt)("inlineCode",{parentName:"p"},"getPrimes([1, 5, 16, 3])")," should return ",(0,o.kt)("inlineCode",{parentName:"p"},"[5, 3]"),"."),(0,o.kt)("p",null,"Starter code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export const getPrimes = (array: number[]): number[] => {\n  /* TODO: add your code */\n};\n")),(0,o.kt)("h2",{id:"question-3"},"Question 3"),(0,o.kt)("p",null,"Write a function, ",(0,o.kt)("inlineCode",{parentName:"p"},"partition"),", that takes in an array of numbers and a function ",(0,o.kt)("inlineCode",{parentName:"p"},"belongToGroup1"),", and returns an object of two arrays ",(0,o.kt)("inlineCode",{parentName:"p"},"group1")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"group2"),"."),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"belongToGroup1")," returns ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", then the element should go into ",(0,o.kt)("inlineCode",{parentName:"p"},"group1"),". If ",(0,o.kt)("inlineCode",{parentName:"p"},"belongToGroup1")," returns ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),", then the element should go into ",(0,o.kt)("inlineCode",{parentName:"p"},"group2"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"EXAMPLE")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"partition([1, 2, 3, 4, 5, 6], (n) => n % 3 === 0); // { group1: [3, 6], group2: [1, 2, 4, 5] }\npartition([1, 2, 3, 4, 5, 6], (n) => n % 2 === 0); // { group1: [2, 4, 6], group2: [1, 3, 5] }\n")),(0,o.kt)("p",null,"Starter code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export const partition = (\n  array: number[],\n  belongToGroup1: (element: number) => boolean\n): { group1: number[]; group2: number[] } => {\n  /* TODO: add your code */\n};\n")),(0,o.kt)("h2",{id:"question-4"},"Question 4"),(0,o.kt)("p",null,'Write a function, makeSentences, that takes in an array of objects\nin the format {name: string, age: number, breed: string} and maps it to an array of sentences\nin the format "',(0,o.kt)("em",{parentName:"p"},"name")," is ",(0,o.kt)("em",{parentName:"p"},"age")," years old, and is a ",(0,o.kt)("em",{parentName:"p"},"breed"),'."'),(0,o.kt)("p",null,"Please use ",(0,o.kt)("em",{parentName:"p"},"object destructuring")," to get object fields."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE")),(0,o.kt)("p",null,'A "prototype" is an instance of an object in JavaScript/TypeScript. In documentation, methods are often denoted like:\n',(0,o.kt)("inlineCode",{parentName:"p"},"Type.prototype.method()")),(0,o.kt)("p",null,"Remember, anything in JavaScript/TypeScript can be an object!"),(0,o.kt)("p",null,"So, we can do: ",(0,o.kt)("inlineCode",{parentName:"p"},"5.toExponential(10)")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"let x = 5; x.toExponential()")),(0,o.kt)("p",null,'Your goal is to display "5 years" for the value 5.6'),(0,o.kt)("p",null,"Take a look at ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number#Methods"},"this documentation")," and choose an appropriate method to use!"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"EXAMPLE")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const doggos = [\n  { name: 'Sparky', age: 3.3, breed: 'Pomeranian Husky' },\n  { name: 'Oreo', age: 5.4, breed: 'Dalmatian' },\n  { name: 'Stella', age: 4.3, breed: 'Alaskan Klee Kai' },\n];\n\nmakeSentences(doggos);\n")),(0,o.kt)("p",null,"should output"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"[\n  'Sparky is 3 years old and is a Pomeranian Husky',\n  'Oreo is 5 years old and is a Dalmatian',\n  'Stella is 4 years old and is a Alaskan Klee Kai',\n];\n")),(0,o.kt)("p",null,"Starter code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// TODO: You should replace this any with an accurate object type in your submission!\ntype Doggo = any;\n\nexport const makeSentences = (array: Doggo[]): string[] => {\n  /* TODO: add your code */\n};\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},'Optional Challenge: In English, "a" becomes "an" before vowels. Create a function such that makeCorrectSentences(doggos) correctly handles this case.')),(0,o.kt)("h2",{id:"submission"},"Submission"),(0,o.kt)("p",null,"Please submit to CMS your ",(0,o.kt)("inlineCode",{parentName:"p"},"index.ts")," file containing your implementations of each of the functions described above."))}m.isMDXComponent=!0},3206:function(e,n,t){function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},r.apply(this,arguments)}t.d(n,{Z:function(){return r}})},5421:function(e,n,t){function r(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}t.d(n,{Z:function(){return r}})}}]);