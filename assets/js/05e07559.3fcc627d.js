"use strict";(self.webpackChunktrends_in_web_dev_website=self.webpackChunktrends_in_web_dev_website||[]).push([[3981],{7300:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(6687);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2911:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var a=n(3206),r=n(5421),o=(n(6687),n(7300)),i=["components"],s={id:"lecture10",title:"Lecture 10"},l=void 0,p={unversionedId:"lecture10",id:"version-2021fa/lecture10",isDocsHomePage:!1,title:"Lecture 10",description:"Lecture Slides",source:"@site/versioned_docs/version-2021fa/lecture10.md",sourceDirName:".",slug:"/lecture10",permalink:"/docs/lecture10",tags:[],version:"2021fa",frontMatter:{id:"lecture10",title:"Lecture 10"},sidebar:"version-2021fa/docs",previous:{title:"Lecture 9",permalink:"/docs/lecture9"},next:{title:"Assignments",permalink:"/docs/assignments"}},c=[{value:"React Native",id:"react-native",children:[{value:"What is React Native?",id:"what-is-react-native",children:[],level:3},{value:"Core React Native Components",id:"core-react-native-components",children:[],level:3},{value:"How to start a React Native Project?",id:"how-to-start-a-react-native-project",children:[],level:3},{value:"Demo",id:"demo",children:[],level:3},{value:"Learn more",id:"learn-more",children:[],level:3},{value:"Extras - Prettifying your UI",id:"extras---prettifying-your-ui",children:[],level:3}],level:2}],u={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.google.com/presentation/d/1tVozUya-oCwHNIHjMt926mJxvxdInIAWSN_4j19a94I/edit?usp=sharing"},"Lecture Slides")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/finalproject"},"Final Project Instructions")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/finalproject#milestone-2"},"Final Project - Milestone 2")," due ",(0,o.kt)("strong",{parentName:"p"},"12/2 by 11:59pm")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/finalproject#milestone-3"},"Final Project - Milestone 3")," due ",(0,o.kt)("strong",{parentName:"p"},"12/9 by 11:59pm")),(0,o.kt)("h2",{id:"react-native"},"React Native"),(0,o.kt)("h3",{id:"what-is-react-native"},"What is React Native?"),(0,o.kt)("p",null,"React Native allows for cross platform mobile development using a webdev framework we already know--React!"),(0,o.kt)("p",null,"React Native allows you to build UIs independent of the platform. Usually when developing an app you have to develop an Android version (using Java/Kotlin) and iOS version (using Objective-C/Swift) separately. React Native takes care of this conversion for you."),(0,o.kt)("h3",{id:"core-react-native-components"},"Core React Native Components"),(0,o.kt)("p",null,"Since React Native is really just React, many of the same concepts (",(0,o.kt)("inlineCode",{parentName:"p"},"useState"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"props"),", React Hooks, etc) still apply to React. However, instead of HTML we have ",(0,o.kt)("inlineCode",{parentName:"p"},"Views"),". A view is the basic building block of UI in mobile development. Views can display images, hold text, handle user input, etc."),(0,o.kt)("p",null,"Some core React Native components are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<View>"),": A container that supports layout with flexbox, style, some touch handling, and accessibility controls. Similar to a non-scrolling ",(0,o.kt)("inlineCode",{parentName:"li"},"<div>"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<Text>"),": Displays, styles, and nests strings of text and even handles touch events. Similar to a ",(0,o.kt)("inlineCode",{parentName:"li"},"<p>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<Image>"),": Displays images like ",(0,o.kt)("inlineCode",{parentName:"li"},"<img>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<ScrollView>"),": A generic scrolling container than can hold nested components and views. Similar to a ",(0,o.kt)("inlineCode",{parentName:"li"},"<div>"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<TextInput>"),": User text input field similar to ",(0,o.kt)("inlineCode",{parentName:"li"},'<input type="text" />'),"."),(0,o.kt)("li",{parentName:"ul"},"... and you can also define your own custom components (and use those built by the community)!")),(0,o.kt)("h3",{id:"how-to-start-a-react-native-project"},"How to start a React Native Project?"),(0,o.kt)("p",null,"A popular way to use React Native is through the ",(0,o.kt)("inlineCode",{parentName:"p"},"Expo")," framework, which allows developing, building, and iterating on iOS, Android and webapps. Expo provides a UI for you to view your changes and if you download the Expo app (",(0,o.kt)("a",{parentName:"p",href:"https://play.google.com/store/apps/details?id=host.exp.exponent&hl=en_US"},"Android"),", ",(0,o.kt)("a",{parentName:"p",href:"https://apps.apple.com/us/app/expo-client/id982107779"},"iOS"),") you can see those changes on your phone as well! After all, we're doing mobile development. Expo also has a lot of packages specific to accessing features on mobile devices like the status bar, battery level, I/O devices, etc."),(0,o.kt)("p",null,"To start a React Native project run the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn global add expo-cli\nexpo init <project name>\nyarn start\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"expo init")," is similar to ",(0,o.kt)("inlineCode",{parentName:"p"},"create-react-app")," in that it generates boilerplate code for you."),(0,o.kt)("h3",{id:"demo"},"Demo"),(0,o.kt)("p",null,"As part of the demo we built the simple TODO list app from ",(0,o.kt)("a",{parentName:"p",href:"/docs/assignment4"},"assignment 4")," and battery tracker in React Native!"),(0,o.kt)("p",null,"Before starting though, we have to install the ",(0,o.kt)("inlineCode",{parentName:"p"},"expo-battery")," package by running ",(0,o.kt)("inlineCode",{parentName:"p"},"expo install expo-battery"),". We use ",(0,o.kt)("inlineCode",{parentName:"p"},"expo install")," to install expo packages instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn add")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"npm install")," because it prevents you from installing incompatible versions with your particular Expo SDK version."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"import { addBatteryLevelListener, getBatteryLevelAsync } from 'expo-battery';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport { Button, StyleSheet, Text, View } from 'react-native';\nimport TaskList from './TaskList';\n\nexport default function App() {\n  const [battery, setBattery] = useState(0);\n  const [count, setCount] = useState(0);\n\n  // Example of using a battery package from expo to access mobile features\n  useEffect(() => {\n    // initially gets battery level\n    getBatteryLevelAsync().then(setBattery);\n    // subscribe to battery level to keep it in sync\n    const listener = addBatteryLevelListener((event) =>\n      setBattery(event.batteryLevel)\n    );\n    // remove the subscription after unmounting\n    return listener.remove;\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Text>Battery: {battery * 100}%</Text>\n      <Text>Count: {count}</Text>\n      <Button title=\"Increment\" onPress={() => setCount((x) => x + 1)} />\n      <TaskList />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\n// how to style elements\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: '2rem',\n  },\n});\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=Playlist.tsx",title:"Playlist.tsx"},"import {\n  Button,\n  FlatList,\n  Text,\n  TextInput,\n  View,\n  StyleSheet,\n} from 'react-native';\nimport React, { useState } from 'react';\n\nconst styles = StyleSheet.create({\n  // space out the container a bit\n  container: { display: 'flex', gap: '8px' },\n  // give our textbox a border\n  input: {\n    borderWidth: 1,\n  },\n});\n\nexport default () => {\n  const [tasks, setTasks] = useState<string[]>([]);\n  const [input, setInput] = useState('');\n  return (\n    <View style={styles.container}>\n      <Text>Task List</Text>\n      {/* flatlist is a canonical way to render a list of items instead of using\n      map like you would in regular react */}\n      <FlatList data={tasks} renderItem={(info) => <Text>{info.item}</Text>} />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Item Name\"\n        onChangeText={setInput}\n        value={input}\n      ></TextInput>\n      <Button\n        title=\"Add\"\n        onPress={() => {\n          setTasks((tasks) => [...tasks, input]);\n          setInput('');\n        }}\n      />\n    </View>\n  );\n};\n")),(0,o.kt)("p",null,"Once you ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn start"),", you should be taken to Expo where you can view your changes on your browser. On the bottom left, there should also be a QR code. If you download the Expo app and scan the QR code with your phone camera (",(0,o.kt)("a",{parentName:"p",href:"https://play.google.com/store/apps/details?id=host.exp.exponent&hl=en_US"},"Android"),", ",(0,o.kt)("a",{parentName:"p",href:"https://apps.apple.com/us/app/expo-client/id982107779"},"iOS"),"), it should take you to the Expo app where you can see your application in mobile form!"),(0,o.kt)("h3",{id:"learn-more"},"Learn more"),(0,o.kt)("p",null,"This was a very cursory introduction to React Native. You can learn more by referring to React docs."),(0,o.kt)("p",null,"React Docs: ",(0,o.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/getting-started"},"https://reactnative.dev/docs/getting-started")),(0,o.kt)("p",null,"Expo Docs: ",(0,o.kt)("a",{parentName:"p",href:"https://docs.expo.io/"},"https://docs.expo.io/")),(0,o.kt)("h3",{id:"extras---prettifying-your-ui"},"Extras - Prettifying your UI"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://mui.com/"},"Material UI")," is a library that ships a bunch of pre-style and customizable components for you to use in your own React projects. Material UI comes with a variety of components ranging from ",(0,o.kt)("a",{parentName:"p",href:"https://mui.com/components/buttons/"},"buttons")," to ",(0,o.kt)("a",{parentName:"p",href:"https://mui.com/components/material-icons/"},"icons")," to ",(0,o.kt)("a",{parentName:"p",href:"https://mui.com/components/drawers/"},"drawers"),", all of which are customizable and come with their own props that can do common tweaks to their existing components to fit your individual need."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://semantic-ui.com/"},"Semantic UI")," and ",(0,o.kt)("a",{parentName:"p",href:"https://getbootstrap.com/"},"Bootstrap"),' are two other popular libraries used for styling and do not require projects written in React and provide pre-written classes for styling elements and organizing layout. Nevertheless - they do come with "React component" versions (',(0,o.kt)("a",{parentName:"p",href:"https://react.semantic-ui.com/"},"Semantic UI React")," and ",(0,o.kt)("a",{parentName:"p",href:"https://react-bootstrap.github.io/"},"React Bootstrap"),") similar to Material UI!"))}m.isMDXComponent=!0},3206:function(e,t,n){function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},a.apply(this,arguments)}n.d(t,{Z:function(){return a}})},5421:function(e,t,n){function a(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}n.d(t,{Z:function(){return a}})}}]);