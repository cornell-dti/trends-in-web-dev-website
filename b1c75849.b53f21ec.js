(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{154:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return p})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return s}));var a=t(1),r=t(9),o=(t(0),t(161)),i={id:"lecture6",title:"Lecture 6"},p={id:"lecture6",title:"Lecture 6",description:"[Lecture Slides](https://docs.google.com/presentation/d/1sBLwqUIciol7970umm83ACJZPfp2TaUQ9x5IQQP5sIo/edit?usp=sharing)",source:"@site/docs/lecture6.md",permalink:"/docs/lecture6",sidebar:"docs",previous:{title:"Lecture 5",permalink:"/docs/lecture5"},next:{title:"Lecture 7",permalink:"/docs/lecture7"}},l=[{value:"Conditional Rendering",id:"conditional-rendering",children:[]},{value:"Composition vs. Inheritance",id:"composition-vs-inheritance",children:[{value:"Composition",id:"composition",children:[]},{value:"Inheritance",id:"inheritance",children:[]},{value:"<strong>React uses Composition</strong>",id:"react-uses-composition",children:[]},{value:"Containment",id:"containment",children:[]}]},{value:"Lifting State Up",id:"lifting-state-up",children:[]}],c={rightToc:l};function s(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.google.com/presentation/d/1sBLwqUIciol7970umm83ACJZPfp2TaUQ9x5IQQP5sIo/edit?usp=sharing"}),"Lecture Slides")),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://drive.google.com/file/d/1YWpFb_xJ5O1xjEyjCX9PKCpq-iSPtmrt/view?usp=sharing"}),"Lecture Video")),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/ashneeldas2/trends-sp20/tree/master/Assignments/a5"}),"Assignment 5")," due ",Object(o.b)("strong",{parentName:"p"},"04/15 7:59pm")),Object(o.b)("h2",{id:"conditional-rendering"},"Conditional Rendering"),Object(o.b)("p",null,"Sometimes we only want things to render when a certain condition is met. For\nexample, only display text when we meet a certain condition. React has\nconditional rendering to make this very simple."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"// PrelimTime.jsx\nimport React from 'react';\n\nexport default ({ prelimToday }) => {\n  if (prelimToday) {\n    return <p>I have a prelim today.</p>;\n  } else {\n    return <p>I don't have a prelim today.</p>;\n  }\n};\n")),Object(o.b)("p",null,"In this example, we have a functional component ",Object(o.b)("inlineCode",{parentName:"p"},"PrelimTime")," that takes in a\nprop ",Object(o.b)("inlineCode",{parentName:"p"},"prelimToday"),". ",Object(o.b)("inlineCode",{parentName:"p"},"prelimToday"),' is a boolean holding whether we have a prelim\ntoday or not. We want the component to display "I have a prelim today." if\n',Object(o.b)("inlineCode",{parentName:"p"},"prelimToday")," is ",Object(o.b)("inlineCode",{parentName:"p"},"true"),' and "I don\'t have a prelim today." if it is ',Object(o.b)("inlineCode",{parentName:"p"},"false"),"."),Object(o.b)("p",null,"Traditionally, we would use the ",Object(o.b)("inlineCode",{parentName:"p"},"if")," statement for this behavior (as shown\nabove). We can also use conditional rendering to make writing this functionality\nmore convenient."),Object(o.b)("p",null,"First we can use the ",Object(o.b)("strong",{parentName:"p"},"ternary operator"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"// PrelimTime.jsx\nimport React from 'react';\n\nexport default ({ prelimToday }) => (\n  prelimToday\n    ? <p>I have a prelim today.</p>\n    : <p>I don't have a prelim today.</p>;\n);\n")),Object(o.b)("p",null,"The ternary operator is also very common in other languages as well such as\nJava or Python. The basic syntax is as follows:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"[boolean expression] ? [true_result] : [false_result]\n")),Object(o.b)("p",null,"Before the ",Object(o.b)("inlineCode",{parentName:"p"},"?")," you have your expression producing ",Object(o.b)("inlineCode",{parentName:"p"},"true")," or ",Object(o.b)("inlineCode",{parentName:"p"},"false"),". The part\nafter the ",Object(o.b)("inlineCode",{parentName:"p"},"?")," but before the ",Object(o.b)("inlineCode",{parentName:"p"},":")," is the result/functionality you want if the\nboolean expression evaluates to ",Object(o.b)("inlineCode",{parentName:"p"},"true"),". The part after the ",Object(o.b)("inlineCode",{parentName:"p"},":")," is what you want\nto happen if the expression is ",Object(o.b)("inlineCode",{parentName:"p"},"false"),"."),Object(o.b)("p",null,"Connecting with the ",Object(o.b)("inlineCode",{parentName:"p"},"PrelimTime")," example, my boolean expression was just the\nprop ",Object(o.b)("inlineCode",{parentName:"p"},"prelimToday"),", although in your code it can be a more complex boolean\nexpression. If ",Object(o.b)("inlineCode",{parentName:"p"},"prelimToday"),' is true, I display "I have a prelim today." If\n',Object(o.b)("inlineCode",{parentName:"p"},"prelimToday"),' is false, I display "I have a prelim today."'),Object(o.b)("p",null,'Notice though, how the only thing changing in this text is adding the word\n"don\'t" if ',Object(o.b)("inlineCode",{parentName:"p"},"prelimToday")," is ",Object(o.b)("inlineCode",{parentName:"p"},"false"),". So only if ",Object(o.b)("inlineCode",{parentName:"p"},"prelimToday")," is ",Object(o.b)("inlineCode",{parentName:"p"},"false"),", we\nwant to add don't."),Object(o.b)("p",null,"React supports the use of ",Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"&&"))," operator:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"// PrelimTime.jsx\nimport React from 'react';\n\nexport default ({ prelimToday }) => (\n  <p>I {!prelimToday && \"don't\"} have a prelim today.</p>\n);\n")),Object(o.b)("p",null,'Here, we display the text "I have a prelim today.". However, in the curly\nbraces, if ',Object(o.b)("inlineCode",{parentName:"p"},"prelimToday")," is ",Object(o.b)("inlineCode",{parentName:"p"},"false"),' then the word "don\'t" will be rendered.\nConditional rendering with ',Object(o.b)("inlineCode",{parentName:"p"},"&&")," is useful when you only have expected behavior\nfor one branch of the conditional. In this case, I only had desired behavior if\n",Object(o.b)("inlineCode",{parentName:"p"},"prelimToday")," was ",Object(o.b)("inlineCode",{parentName:"p"},"false"),"."),Object(o.b)("p",null,"As you have seen, React's conditional rendering made modifying render behavior\nbased on conditions a lot easier. In this small example, we went from five lines\nof code in the component to just one!"),Object(o.b)("h2",{id:"composition-vs-inheritance"},"Composition vs. Inheritance"),Object(o.b)("p",null,"Composition and inheritance are two programming techniques for defining how classes relate to objects. (Think of classes as the blueprint for a house and objects the actual houses created from that blueprint)"),Object(o.b)("h3",{id:"composition"},"Composition"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Composition"),' defines a class as the sum of its individual parts. This is a "has-a" relationship (e.g. a car has a steering wheel, has a window, etc). In Java (and other object oriented languages), these components are represented as ',Object(o.b)("em",{parentName:"p"},"instance")," variables."),Object(o.b)("h3",{id:"inheritance"},"Inheritance"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Inheritance"),' derives one class from another. If class A is the parent of class B and C, B and C inherit the properties/functions of A. This is a "is-a" relationship (e.g. car is a vehicle, circle is a shape.)'),Object(o.b)("h3",{id:"react-uses-composition"},Object(o.b)("strong",{parentName:"h3"},"React uses Composition")),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"\u201cReact has a powerful composition model, and we recommend using composition instead of inheritance to reuse code between components.\u201d"),"\n-- ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://reactjs.org/docs/composition-vs-inheritance.html"}),"React Docs")),Object(o.b)("h3",{id:"containment"},"Containment"),Object(o.b)("p",null,"Components may not know their children ahead of time."),Object(o.b)("p",null,"Children are the components you put within another component:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),"<ComponentA>\n  // anything here is a child of Component A\n</ComponentA>\n")),Object(o.b)("p",null,"Use the ",Object(o.b)("inlineCode",{parentName:"p"},"children")," prop to pass in children components."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'const Container = (props) => <div className="Border">{props.children}</div>;\n')),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'const App = () => (\n  <div className="App">\n    <Container>\n      <p>Hello!</p>\n      <p>Bye!</p>\n    </Container>\n  </div>\n);\n')),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"props.children")," will have the paragraph elements."),Object(o.b)("p",null,"We didn't actually get to this live demo, adapted from ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://reactjs.org/docs/composition-vs-inheritance.html"}),"this tutorial")," in the React docs, during lecture but it is very simple if you want to try it out yourself. We also show how to import styles."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"// Container.jsx\nimport React from 'react';\nimport './Container.css'; // this is how we import styles\n\nexport default (props) => <div className=\"Border\">{props.children}</div>;\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-css"}),"/* Container.css */\n.Border {\n  border: 4px solid black;\n  background-color: azure;\n}\n")),Object(o.b)("p",null,'Less common but you also may want multiple "holes" in your component (for example, a left and right child):'),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"// SplitPane.jsx\nimport React from 'react';\nimport './SplitPane.css';\n\nexport default (props) => (\n  <div>\n    <div className=\"LeftPane\">{props.left}</div>\n    <div className=\"RightPane\">{props.right}</div>\n  </div>\n);\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-css"}),"/* SplitPane.css */\n/* these colors are ugly I know */\n.LeftPane {\n  float: left;\n  width: 50%;\n  background-color: red;\n}\n\n.RightPane {\n  float: right;\n  width: 50%;\n  background-color: aquamarine;\n}\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import React from 'react';\nimport SplitPane from './SplitPane';\nimport Container from './Container';\n\nexport default () => {\n  return (\n    <div className=\"App\">\n      <Container>\n        <p>Hello, world!</p>\n      </Container>\n      <SplitPane\n        left={<div>I'm on the left!</div>}\n        right={<div>I'm on the right!</div>}\n      />\n    </div>\n  );\n};\n")),Object(o.b)("h2",{id:"lifting-state-up"},"Lifting State Up"),Object(o.b)("p",null,"This section was a live demo, adapted from ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://reactjs.org/docs/lifting-state-up.html"}),"this tutorial")," in the React docs."),Object(o.b)("p",null,"App.js"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import React from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport FahrenheitInput from './FahrenheitInput';\nimport CelsiusInput from './CelsiusInput';\n\nfunction App() {\n  const [temperature, setTemperature] = useState(-40);\n\n  return (\n    <div className=\"App\">\n      <label>Fahrenheit:</label>\n      <FahrenheitInput\n        temperature={temperature}\n        callback={(temp) => setTemperature(temp)}\n      />\n      <br />\n      <label>Celcius:</label>\n      <CelsiusInput\n        temperature={temperature}\n        callback={(temp) => setTemperature(temp)}\n      />\n      <br />\n      {temperature >= 100 ? (\n        <span>Water would boil here!</span>\n      ) : (\n        <span>Water would not boil here!</span>\n      )}\n      <br />\n      <span>Water would {temperature >= 0 && 'not'} freeze here!</span>\n    </div>\n  );\n}\n\nexport default App;\n")),Object(o.b)("p",null,"CelciusInput.jsx"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import React from 'react';\n\nexport default ({ temperature, callback }) => {\n  const handlechange = (e) => callback(parseInt(e.target.value) || 0);\n\n  return <input value={temperature} onChange={handlechange} />;\n};\n")),Object(o.b)("p",null,"FahrenheitInput.jsx"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import React from 'react';\n\nexport default ({ temperature, callback }) => {\n  const handlechange = (e) =>\n    callback((((parseInt(e.target.value) || 0) - 32) * 5) / 9);\n\n  return <input value={(temperature * 9) / 5 + 32} onChange={handlechange} />;\n};\n")),Object(o.b)("p",null,"Check lecture video for a more detailed explanation."))}s.isMDXComponent=!0},161:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return u}));var a=t(0),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),s=function(e){var n=r.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):p({},n,{},e)),t},b=function(e){var n=s(e.components);return r.a.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=s(t),d=a,u=b["".concat(i,".").concat(d)]||b[d]||m[d]||o;return t?r.a.createElement(u,p({ref:n},c,{components:t})):r.a.createElement(u,p({ref:n},c))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=t[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);