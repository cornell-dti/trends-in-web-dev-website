(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{46:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",function(){return o}),t.d(n,"rightToc",function(){return l}),t.d(n,"default",function(){return s});t(0);var a=t(66);function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o={id:"lecture3",title:"Lecture 3 - Frontend 2"},l=[{value:"Conditional Rendering",id:"conditional-rendering",children:[]},{value:"Lifting State Up",id:"lifting-state-up",children:[]}],p={rightToc:l},c="wrapper";function s(e){var n=e.components,t=i(e,["components"]);return Object(a.b)(c,r({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"conditional-rendering"},"Conditional Rendering"),Object(a.b)("p",null,"Sometimes we only want things to render when a certain condition is met. For\nexample, only display text when we meet a certain condition. React has\nconditional rendering to make this very simple."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"// PrelimTime.jsx\nimport React from 'react';\n\nexport default ({ prelimToday }) => {\n  if (prelimToday) {\n    return <p>I have a prelim today.</p>;\n  } else {\n    return <p>I don't have a prelim today.</p>;\n  }\n};\n")),Object(a.b)("p",null,"In this example, we have a functional component ",Object(a.b)("inlineCode",{parentName:"p"},"PrelimTime")," that takes in a\nprop ",Object(a.b)("inlineCode",{parentName:"p"},"prelimToday"),". ",Object(a.b)("inlineCode",{parentName:"p"},"prelimToday"),' is a boolean holding whether we have a prelim\ntoday or not. We want the component to display "I have a prelim today." if\n',Object(a.b)("inlineCode",{parentName:"p"},"prelimToday")," is ",Object(a.b)("inlineCode",{parentName:"p"},"true"),' and "I don\'t have a prelim today." if it is ',Object(a.b)("inlineCode",{parentName:"p"},"false"),"."),Object(a.b)("p",null,"Traditionally, we would use the ",Object(a.b)("inlineCode",{parentName:"p"},"if")," statement for this behavior (as shown\nabove). However, since this is so common, React has conditional rendering to\nmake writing this functionality more convenient."),Object(a.b)("p",null,"First we can use the ",Object(a.b)("strong",{parentName:"p"},"ternary operator"),":"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"// PrelimTime.jsx\nimport React from 'react';\n\nexport default ({ prelimToday }) => (\n  prelimToday\n    ? <p>I have a prelim today.</p>\n    : <p>I don't have a prelim today.</p>;\n);\n")),Object(a.b)("p",null,"The ternary operator is also very common in other languages as well such as\nJava or Python. The basic syntax is as follows:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"<boolean expression> ? <true_result> : <false_result>\n")),Object(a.b)("p",null,"Before the ",Object(a.b)("inlineCode",{parentName:"p"},"?")," you have your expression producing ",Object(a.b)("inlineCode",{parentName:"p"},"true")," or ",Object(a.b)("inlineCode",{parentName:"p"},"false"),". The part\nafter the ",Object(a.b)("inlineCode",{parentName:"p"},"?")," but before the ",Object(a.b)("inlineCode",{parentName:"p"},":")," is the result/functionality you want if the\nboolean expression evaluates to ",Object(a.b)("inlineCode",{parentName:"p"},"true"),". The part after the ",Object(a.b)("inlineCode",{parentName:"p"},":")," is what you want\nto happen if the expression is ",Object(a.b)("inlineCode",{parentName:"p"},"false"),"."),Object(a.b)("p",null,"Connecting with the ",Object(a.b)("inlineCode",{parentName:"p"},"PrelimTime")," example, my boolean expression was just the\nprop ",Object(a.b)("inlineCode",{parentName:"p"},"prelimToday"),", although in your code it can be a more complex boolean\nexpression. If ",Object(a.b)("inlineCode",{parentName:"p"},"prelimToday"),' is true, I display "I have a prelim today." If\n',Object(a.b)("inlineCode",{parentName:"p"},"prelimToday"),' is false, I display "I have a prelim today."'),Object(a.b)("p",null,'Notice though, how the only thing changing in this text is adding the word\n"don\'t" if ',Object(a.b)("inlineCode",{parentName:"p"},"prelimToday")," is ",Object(a.b)("inlineCode",{parentName:"p"},"false"),". So only if ",Object(a.b)("inlineCode",{parentName:"p"},"prelimToday")," is ",Object(a.b)("inlineCode",{parentName:"p"},"false"),", we\nwant to add don't."),Object(a.b)("p",null,"React has the inline ",Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"&&"))," operator:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"// PrelimTime.jsx\nimport React from 'react';\n\nexport default ({ prelimToday }) => (\n  <p>I {!prelimToday && \"don't\"} have a prelim today.</p>\n);\n")),Object(a.b)("p",null,'Here, I display the text "I have a prelim today." However, in the curly braces,\nif ',Object(a.b)("inlineCode",{parentName:"p"},"prelimToday")," is ",Object(a.b)("inlineCode",{parentName:"p"},"false"),' I insert the word "don\'t". Conditional rendering\nwith ',Object(a.b)("inlineCode",{parentName:"p"},"&&")," is useful when you only have expected behavior for one branch of the\nconditional. In this case, I only had desired behavior if ",Object(a.b)("inlineCode",{parentName:"p"},"prelimToday")," were\n",Object(a.b)("inlineCode",{parentName:"p"},"false"),"."),Object(a.b)("p",null,"As you have seen, React's conditional rendering made modifying render behavior\nbased on conditions a lot easier. In this small example, we went from five lines\nof code in the component to just one!"),Object(a.b)("h2",{id:"lifting-state-up"},"Lifting State Up"))}s.isMDXComponent=!0},66:function(e,n,t){"use strict";t.d(n,"a",function(){return l}),t.d(n,"b",function(){return d});var a=t(0),r=t.n(a),i=r.a.createContext({}),o=function(e){var n=r.a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},l=function(e){var n=o(e.components);return r.a.createElement(i.Provider,{value:n},e.children)};var p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},s=function(e){var n=e.components,t=e.mdxType,a=e.originalType,i=e.parentName,l=function(e,n){var t={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===n.indexOf(a)&&(t[a]=e[a]);return t}(e,["components","mdxType","originalType","parentName"]),p=o(n),s=t,d=p[i+"."+s]||p[s]||c[s]||a;return n?r.a.createElement(d,Object.assign({},l,{components:n})):r.a.createElement(d,l)};function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=s;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=t[d];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"}}]);